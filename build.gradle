buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "Modmuss50"
            url = "https://maven.modmuss50.me/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.fabricmc:fabric-loom:0.4-SNAPSHOT"
        classpath "gradle.plugin.net.minecrell:licenser:0.2.1"
        classpath 'de.undercouch:gradle-download-task:3.4.3'
    }
}

apply plugin: net.fabricmc.loom.LoomGradlePlugin
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: net.minecrell.gradle.licenser.Licenser
apply plugin: 'de.undercouch.download'
apply plugin: 'idea'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        name = "Modmuss50"
        url = "https://maven.modmuss50.me/"
    }
    maven {
        // LibCD
        url 'http://server.bbkr.space:8081/artifactory/libs-release'
    }
    maven {
        //Dev Mode
        url "https://maven.jamieswhiteshirt.com/libs-release/"
    }
    maven {
        //trinkets
        url = "https://maven.abusedmaster.xyz/"
    }
    maven {
        url = "https://jitpack.io"
    }
}

version = "3.4.0"

configurations {
    shade
    compile.extendsFrom shade
}

def ENV = System.getenv()
def build_number = ENV.BUILD_NUMBER ?: "local"
version = "${version}+build.$build_number"


group = 'FabricTest'

dependencies {
    minecraft "com.mojang:minecraft:1.16.1"
    mappings "net.fabricmc:yarn:1.16.1+build.4:v2"
    modImplementation "net.fabricmc:fabric-loader:0.8.8+build.202"

    //Fabric api
    modImplementation "net.fabricmc.fabric-api:fabric-api:0.13.1+build.370-1.16"

    optionalDependency("me.shedaniel:RoughlyEnoughItems:4.5.1")

    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
}

def optionalDependency(String dep) {
    dependencies.modRuntime(dep) {
        exclude group: "net.fabricmc.fabric-api"
        exclude module: "nbt-crafting"
    }
    dependencies.modCompileOnly(dep) {
        exclude group: "net.fabricmc.fabric-api"
        exclude module: "nbt-crafting"
    }
}

def disabledOptionalDependency(String dep) {
    dependencies.modCompileOnly(dep) {
        exclude group: "net.fabricmc.fabric-api"
        exclude module: "nbt-crafting"
    }
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

jar {
    exclude "**/*.psd"
    classifier = 'universal'

    from { null }
}


import groovy.json.JsonOutput
import groovy.json.JsonSlurper

//Remove all translations that do not have an entry, ensures that minecraft falls back to EN_US over writing out an empty string.
task fixTranslations(dependsOn: ['renameCrowdin']) {
    def jsonSlurper = new JsonSlurper()
    doLast {
        file('build/translations').eachFileRecurse(groovy.io.FileType.FILES) {
            if (it.name.endsWith(".json")) {
                def lang = jsonSlurper.parseText(it.text)
                lang.values().removeIf { val -> val.empty }
                it.text = JsonOutput.prettyPrint(JsonOutput.toJson(lang))
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}
